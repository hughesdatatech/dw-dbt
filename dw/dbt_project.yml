name: "dw"
version: "1.0.0"
require-dbt-version: ">=1.3.0"
config-version: 2

# The profile dbt uses for this project.
profile: "dw"

# Where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory.
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

tests:
  +severity: warn  # Default to warn for all tests.

target-path: "target" # Directory which will store compiled SQL files.
clean-targets: # Directories to be removed by `dbt clean`.
  - "target"
  - "dbt_packages"

on-run-start: "{{ process_log_handler(object_type='dbt_project', event_name='execute', sequence_description='on_run_start') }}"
on-run-end: "{{ process_log_handler(object_type='dbt_project', event_name='execute', sequence_description='on_run_end') }}"

# Full documentation: https://docs.getdbt.com/docs/configuring-models
models:
  +pre-hook:
    sql: "{{ process_log_handler(object_type='model', event_name='execute', sequence_description='pre_hook') }}"
    #transaction: false
  +post-hook:
    sql: "{{ process_log_handler(object_type='model', event_name='execute', sequence_description='post_hook') }}"
    #transaction: false
  dw:
    +bind: false # Late-binding views so DMS can drop and recreate underlying tables.
    1_staging:
      +materialized: table
      demo_source: # application name
        +tags: demo
        demo_schema: # schema name
    3_business_rule:
      +materialized: view
      demo_source: # application name
        +tags: demo
    4_info_mart:
      +materialized: table
      subject_area:
        +materialized: view
        +tags: demo
        current:
          +materialized: table
        historical:
          +materialized: incremental
        point_in_time:
          +tags: pit
          +materialized: incremental
      opioid_stay:
        +materialized: view
        current:
          +materialized: table
        historical:
          +materialized: incremental
        point_in_time:
          +tags: pit
          +materialized: incremental
    5_metrics_rule:
      +materialized: view
      subject_area:
        +tags: demo
    6_metrics_mart:
      subject_area:
        +tags: demo
        +materialized: view
        current:
          +materialized: table
        historical:
          +materialized: incremental
        point_in_time:
          +tags: pit
          +materialized: incremental
    utilities:
        +materialized: view
        process_log_key_status_tracking:
          +materialized: incremental
        process_log_stg_rv_all_test:
          +materialized: incremental
          +tags: stg_rv_all_test
          transient_test:
            +materialized: ephemeral

snapshots:
  +pre-hook:
    sql: "{{ process_log_handler(object_type='snapshot', event_name='execute', sequence_description='pre_hook') }}"
  +post-hook:
    sql: "{{ process_log_handler(object_type='snapshot', event_name='execute', sequence_description='post_hook') }}"
  dw:
    2_raw_vault:
      demo_schema:
        +tags: demo

seeds:
  dw:
    0_reference_data:
      +tags: demo
    
vars:
  "dbt_date:time_zone": "UTC"

  room_statuses:
    1: paying
    3: expired
    4: expired
    5: free_consultation
    6: not_renewing
    7: canceled
    9: full_lock
    10: trial
    11: past_due
    12: blur_lock
    13: freeze
    14: free_trial
    15: no_match

  survey_types:
    1: outcome_measures
    2: working_alliance_inventory
    3: workplace_outcome_assessment
    4: work_limitations_questionnaire
    5: psychographic_assessment

  test_user_emails:
    - test.com
    - example.com
    - talkspace.com
    - talkspace.m8r.co
    - mailinator.com
    - mailiantor.com
    - maillinator.com

  user_types:
    1: admin
    2: client
    3: provider

  dim_date_valid_range:
    1: '2000-01-01'
    2: '2050-01-02'

  max_effective_date: '9999-12-31 00:00:00'

  # Set to a number > 0 to limit the number of rows returned in all staging models.
  # dbt run --vars 'test_row_limit: 1' --select tag:staging
  test_row_limit: 0

  pipeline_key: 'null'
  pipeline_project_metadata: 'null'
  pipeline_schedule_metadata: 'null'

  object_type_override: 'null'
  object_identifier_override: 'null'
  event_name_override: 'null'
  sequence_description_override: 'null'

  is_compile: false

  run_key: 0

  clean_all_objects_key: '^^^xyz***34'

  null_key_int: 'null'

  null_key_char: 'null'

  # Not currently used but can be used to make business keys unique if key integration is required.
  collision_keys:
    1: default
    2: talkspace_app # Talkspace application / product
    3: gedi # Gateway EDI
    4: talkspace_claims # In-house developed Talkspace claims system
    5: nppes # Issuer of NPIs, the National Plan and Provider Enumeration System
    6: recurly # No longer used payment processor
    7: stripe # Currently used payment processor

  # Default values for DW metadata-related columns.
  tenant_keys:
    1: default

  sanding_value: '||'

  job_id_default: default

  job_user_id_default: circleci

  jira_task_key_default: default

  extracted_at_default: _dms_replication_ts

  loaded_at_default: sysdate()

  process_log: process_log

  ########################################################################################################################
  # Model configuration used internally by the DW.
  # ALL source entitites require an entry here in the format schema_name__table_name (the key in the primary dictionary).
  # Some keys in the secondary dictionary are required in certain cases and some are optional as noted below.
  ########################################################################################################################
  #
  # Key:                    Values and Description
  #
  # track_key_deletes:      true | false
  #                         Set to true if you anticipate data to be deleted from the source entity. 
  #                         This will ensure that key deletes are tracked in the process_log_key_status_tracking table.
  #                         Key is REQUIRED for ALL sources entities.
  #
  # unique_key:             List of columns that comprise the unique key of the source entity. 
  #                         Key is REQUIRED for ALL sources entities.
  #
  # boolean_cols:           List of boolean columns in the source entity.
  #                         Key is ONLY REQUIRED for data sources using the snapshot check strategy (stripe_mobile).
  #                         If a stripe_mobile source entity has no booleans, this key does not need to be set.
  #
  # boolean_reserved_cols:  List of boolean columns that are also reserved Redshift words. 
  #                         Key is ONLY REQUIRED for sources using the snapshot check strategy (stripe_mobile).
  #                         If a stripe_mobile source entity has no boolean reserved words, this key does not need to be set.
  #                         NB: A column should be listed in only one of boolean_cols or boolean_reserved_cols not both.
  #                         i.e. the two lists are mutually exclusive.
  #
  # reserved_cols:          List of columns that are reserved Redshift words.
  #                         Key is REQUIRED for ALL sources having columns with names that are Redshift reserved words.
  #                         If a source entity has no reserved words, this key does not need to be set.
  #                         NB: A column should be listed in only one of boolean_reserved_cols or reserved_cols not both.
  #                         i.e. the two lists are mutually exclusive.
  #
  ########################################################################################################################

  stg_pagov__model_config:
      pagov__opioid_stays: 
        track_key_deletes: false 
        unique_key: ['county_name', 'time_period_date_end']
        boolean_cols:
        reserved_cols:
        boolean_reserved_cols:

  # Schema configuration used internally by the DW.
  stg_schema_config:
      pagov:
        snapshot_strategy: check
        snapshot_updated_at_col: 
        staging_model_default_exception_cols: 
        staging_model_order_by_cols: ['1 desc']
      #talktala_production:
        #snapshot_strategy: timestamp
        #snapshot_updated_at_col: _dms_cdc_ts
        #staging_model_default_exception_cols: ['_dms_operation']
        #staging_model_order_by_cols: ['_dms_cdc_ts desc','_dms_replication_ts desc']
      