version: 2.1

orbs:
  python: circleci/python@2.1.1
  slack: circleci/slack@4.10.1

parameters: #-pp
  manual-trigger-pp:
    type: string
    default: ""
  dbt-vars:
    type: string
    default: "--vars 'test_row_limit: 10'"

commands: #-co
  setup-and-compile-co:
    parameters:
      compile-params:
        description: Optional arguments to be passed to the dbt compile command
        default: ""
        type: string
    steps:
      - checkout
      - run:
          name: Set up dbt profile
          command: |
            mkdir -p ~/.dbt
            mv .circleci/profiles.yml ~/.dbt/profiles.yml 
            cat  ~/.dbt/profiles.yml
            mv .circleci/requirements.txt  ~/.dbt/requirements.txt
      - python/install-packages:
          pkg-manager: pip
          app-dir: ~/.dbt/  # If you're requirements.txt isn't in the root directory.
          # pip-dependency-file: test-requirements.txt  # if you have a different name for your requirements file, maybe one that combines your runtime and test requirements. 
      - run:
          name: Run dbt deps
          command: cd dw && dbt deps
      - run:
          name: Install Meltano
          command: pipx install "meltano"
      - run:
          name: Install Rest API Extractor
          command: cd dw-meltano\dw-ownbackup && meltano install extractor tap-rest-api-msdk
      - run:
          name: Run dbt parse
          command: cd dw && dbt parse <<parameters.compile-params>>
      - run:
          name: Run dbt compile
          command: cd dw && dbt compile <<parameters.compile-params>>
  build-co:
    parameters:
      build-params:
        description: Optional arguments to be passed to the dbt build command
        default: "--exclude tag:hold tag:pit"
        type: string
    steps:
      - run:
          name: Run dbt build
          command: cd dw && dbt build <<parameters.build-params>>

jobs: #-jb
  setup-and-compile-jb:
    docker:
      - image: cimg/python:3.9.7
    steps:
      - setup-and-compile-co:
          compile-params: ""
      - slack/notify:
          channel: $SLACK_DEFAULT_CHANNEL
          event: pass
          template: basic_success_1
      - slack/notify:
          channel: $SLACK_DEFAULT_CHANNEL
          event: fail
          template: basic_fail_1
  dbt-sf-runner-test-jb:
    docker:
      - image: cimg/python:3.9.7
    steps:
      - setup-and-compile-co:
          compile-params: "--target arc_test"
      - build-co:
          build-params: "--target arc_test << pipeline.parameters.dbt-vars >> --exclude tag:hold"
      - slack/notify:
          channel: $SLACK_DEFAULT_CHANNEL
          event: pass
          template: basic_success_1
      - slack/notify:
          channel: $SLACK_DEFAULT_CHANNEL
          event: fail
          template: basic_fail_1
  dbt-sf-runner-daily-jb:
    docker:
      - image: cimg/python:3.9.7
    steps:
      - setup-and-compile-co:
          compile-params: ""
      - build-co:
          build-params: "--exclude tag:hold tag:pit"
      - slack/notify:
          channel: $SLACK_DEFAULT_CHANNEL
          event: pass
          template: basic_success_1
      - slack/notify:
          channel: $SLACK_DEFAULT_CHANNEL
          event: fail
          template: basic_fail_1
  dbt-sf-runner-monthly-pit-jb:
    docker:
      - image: cimg/python:3.9.7
    steps:
      - setup-and-compile-co:
          compile-params: ""
      - build-co:
          build-params: "--exclude tag:hold"
      - slack/notify:
          channel: $SLACK_DEFAULT_CHANNEL
          event: pass
          template: basic_success_1
      - slack/notify:
          channel: $SLACK_DEFAULT_CHANNEL
          event: fail
          template: basic_fail_1
             
workflows: #-wf
  version: 2
  setup-and-compile-wf:
    when:
      or:
        - equal: [ "setup-and-compile", << pipeline.parameters.manual-trigger-pp >> ]
        - equal: [ "webhook", << pipeline.trigger_source >> ]
    jobs:
      - setup-and-compile-jb:
          filters:
            branches:
              only: 
                - main
                - development
  test-wf:
    when:
      or:
        - equal: [ "dbt-sf-runner-test", << pipeline.parameters.manual-trigger-pp >> ]
        - equal: [ "dbt-sf-runner-test", << pipeline.schedule.name >> ]
    jobs:
      - dbt-sf-runner-test-jb
  scheduled-pipeline-daily-wf:
    when:
      or:
        - equal: [ "dbt-sf-runner-daily", << pipeline.parameters.manual-trigger-pp >> ]
        - equal: [ "dbt-sf-runner-daily", << pipeline.schedule.name >> ]
    jobs:
      - dbt-sf-runner-daily-jb
  scheduled-pipeline-monthly-pit-wf:
    when:
      or:
        - equal: [ "dbt-sf-runner-monthly-pit", << pipeline.parameters.manual-trigger-pp >> ]
        - equal: [ "dbt-sf-runner-monthly-pit", << pipeline.schedule.name >> ]
    jobs:
      - dbt-sf-runner-monthly-pit-jb
  